[{"D:\\website\\reacttailwindboilerplate\\src\\index.js":"1","D:\\website\\reacttailwindboilerplate\\src\\App.js":"2","D:\\website\\reacttailwindboilerplate\\src\\serviceWorker.js":"3","D:\\website\\reacttailwindboilerplate\\src\\componants\\Homepage.js":"4","D:\\website\\reacttailwindboilerplate\\src\\componants\\Countdown.js":"5","D:\\website\\reacttailwindboilerplate\\src\\componants\\Accordion.js":"6","D:\\website\\reacttailwindboilerplate\\src\\componants\\PopUpForm.js":"7"},{"size":464,"mtime":1608986396395,"results":"8","hashOfConfig":"9"},{"size":386,"mtime":1609177253187,"results":"10","hashOfConfig":"9"},{"size":5086,"mtime":1608986396396,"results":"11","hashOfConfig":"9"},{"size":35755,"mtime":1609245825897,"results":"12","hashOfConfig":"9"},{"size":4144,"mtime":1609238756016,"results":"13","hashOfConfig":"9"},{"size":3139,"mtime":1609245344991,"results":"14","hashOfConfig":"9"},{"size":3169,"mtime":1609238849513,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1ci17j3",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},"D:\\website\\reacttailwindboilerplate\\src\\index.js",[],["33","34"],"D:\\website\\reacttailwindboilerplate\\src\\App.js",[],"D:\\website\\reacttailwindboilerplate\\src\\serviceWorker.js",[],"D:\\website\\reacttailwindboilerplate\\src\\componants\\Homepage.js",["35"],"D:\\website\\reacttailwindboilerplate\\src\\componants\\Countdown.js",["36"],"import React, { useState, useEffect } from 'react'\r\n\r\nexport const Countdown = (props) => {\r\n\r\n    const [days, setdays] = useState()\r\n    const [hours, sethours] = useState()\r\n    const [minutes, setminutes] = useState()\r\n    const [seconds, setseconds] = useState()\r\n    const [distance, setdistance] = useState()\r\n    const [navbar, setnavbar] = useState(0)\r\n    var prevScrollpos = window.pageYOffset;\r\n    window.onscroll = function () {\r\n        var currentScrollPos = window.pageYOffset;\r\n        if (prevScrollpos > currentScrollPos) {\r\n            setnavbar(0);\r\n        } else {\r\n            setnavbar(-38);\r\n        }\r\n        prevScrollpos = currentScrollPos;\r\n    }\r\n    useEffect(() => {\r\n        const x = setInterval(function () {\r\n            let now = new Date().getTime();\r\n            // Get today's date and time\r\n            let countDownDate = new Date(`Jan 2, 2021 14:35:25`).getTime();\r\n            // Find the distance between now and the count down date\r\n\r\n\r\n            let distance = countDownDate - now;\r\n\r\n            // Time calculations for days, hours, minutes and seconds\r\n            let days = Math.floor(distance / (1000 * 60 * 60 * 24));\r\n            let hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n            let minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n            var seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n            setdays(days)\r\n            sethours(hours)\r\n            setminutes(minutes)\r\n            setseconds(seconds)\r\n            setdistance(distance)\r\n\r\n\r\n\r\n        }, 1000);\r\n    }, [])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    if (distance < 0) {\r\n        return (\r\n            <div className=\" fixed bg-red-700 shadow-md block     py-3 md:px-6  z-50 w-full px-5 py-1 flex justify-between items-center\" style={{ top: navbar }}>\r\n                <center className=\"mb-0 font-bold md:text-2xl text-xs m-auto text-white \">\r\n\r\n                    <div className=\"block\">Offer EXPIRED</div>\r\n                </center>\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div id=\"navbar\" className=\" fixed bg-red-700 shadow-md block     py-3 md:px-6  z-50 w-full px-5 py-1 flex justify-between items-center\" style={{ top: navbar }}>\r\n                <center className=\"mb-0 font-bold md:text-2xl text-xs m-auto text-white \">\r\n\r\n                    <div className=\"block\">Limited Seats Book Now</div>\r\n                </center>\r\n                <ul className=\"flex mt-0 justify-center\">\r\n                    <li>  <div className=\"  text-center border rounded-lg  border-red-700 bg-red-700 text-white rounded-md px-3 py-1 m-2 transition duration-500 ease select-none hover:bg-red-600 focus:outline-none focus:shadow-outline  \">\r\n                        <span className=\"font-black m-0 p-0\">{days}</span>\r\n                        <div className=\"text-xs font-extralight  \">Days</div>\r\n                    </div>\r\n                    </li>\r\n\r\n                    <li>  <div className=\"  text-center border rounded-lg border-red-700 bg-red-700 text-white rounded-md px-3 py-1 m-2 transition duration-500 ease select-none hover:bg-red-600 focus:outline-none focus:shadow-outline  \">\r\n                        <span className=\"font-black m-0 p-0\">{hours}</span><div className=\"text-xs font-extralight \">Hours</div></div></li>\r\n\r\n                    <li>  <div className=\"  text-center border rounded-lg border-red-700 bg-red-700 text-white rounded-md px-3 py-1 m-2 transition duration-500 ease select-none hover:bg-red-600 focus:outline-none focus:shadow-outline  \"><span className=\"font-black m-0 p-0\">{minutes}</span><div className=\"text-xs font-extralight  \">Minutes</div></div></li>\r\n\r\n                    <li>  <div className=\"  text-center border rounded-lg border-red-700 bg-red-700 text-white rounded-md px-3 py-1 m-2 transition duration-500 ease select-none hover:bg-red-600 focus:outline-none focus:shadow-outline  \"><span className=\"font-black m-0 p-0\">{seconds}</span><div className=\"text-xs  font-extralight\">Seconds</div></div></li>\r\n\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n","D:\\website\\reacttailwindboilerplate\\src\\componants\\Accordion.js",[],"D:\\website\\reacttailwindboilerplate\\src\\componants\\PopUpForm.js",["37","38"],"import React from 'react'\r\nimport { useForm } from \"react-hook-form\";\r\nimport emailjs from 'emailjs-com';\r\n\r\n\r\nexport const PopUpForm = (props) => {\r\n    const { register, handleSubmit, errors } = useForm();\r\n\r\n    const onSubmit = (data, e) => {\r\n        emailjs.send(\"service_ggy36e6\", \"template_817ivy8\", e.target, \"user_qcVEGAk66Pd4cuX7BrWOi\")\r\n            .then((result) => {\r\n                console.log(result.text);\r\n            }, (error) => {\r\n                console.log(error.text);\r\n            });;\r\n        e.target.reset()\r\n        props.setshowModal(false)\r\n        \r\n    }\r\n\r\n    return (\r\n        <form id=\"form\" className=\" m-auto my-8\" onSubmit={handleSubmit(onSubmit)}>\r\n        <div data-aos-duration=\"1000\" data-aos=\"fade-up\" className=\"md:w-1/2 w-11/12 m-auto\">\r\n            <div>\r\n                <span className=\"uppercase text-sm text-gray-600 font-bold\">Full Name</span>\r\n                <input className=\"w-full bg-gray-300 text-gray-900 mt-2 p-3 rounded-lg focus:outline-none focus:shadow-outline\"\r\n                    type=\"text\" placeholder=\"\" name=\"from_name\" ref={register({ required: true })} />\r\n                {errors.from_name && errors.from_name.type === \"required\" && <span class=\"error\">This is required</span>}\r\n            </div>\r\n            <div className=\"mt-8\">\r\n                <span className=\"uppercase text-sm text-gray-600 font-bold\">Email</span>\r\n                <input className=\"w-full bg-gray-300 text-gray-900 mt-2 p-3 rounded-lg focus:outline-none focus:shadow-outline\"\r\n                    type=\"text\" name=\"to_name\" ref={register({ required: true ,  pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n                })} />\r\n                {errors.to_name && errors.to_name.type === \"required\" && (<span  class=\"error\" >This is required</span>)}\r\n                {errors.to_name && errors.to_name.type === \"pattern\" && (<span  class=\"error\" >Invalid Email</span>)}\r\n            </div>\r\n            <div className=\"mt-8\">\r\n                <span className=\"uppercase text-sm text-gray-600 font-bold\">Phone No.</span>\r\n                <input className=\"w-full bg-gray-300 text-gray-900 mt-2 p-3 rounded-lg focus:outline-none focus:shadow-outline\"\r\n                    type=\"number\" name=\"phoneNo\" ref={register({ required: true, maxLength: 11, minLength: 10 })} />\r\n                {errors.phoneNo && errors.phoneNo.type === \"required\" && <span class=\"error\">This is required</span>}\r\n                {errors.phoneNo && errors.phoneNo.type === \"maxLength\" && <span class=\"error\">Invalid No.</span>}\r\n                {errors.phoneNo && errors.phoneNo.type === \"minLength\" && <span class=\"error\">Invalid No.</span>}\r\n            </div>\r\n\r\n            <div className=\"mt-8 \">\r\n                <button type=\"submit\"\r\n                    className=\"uppercase text-sm font-bold tracking-wide bg-indigo-500 text-gray-100 p-3 rounded-lg w-full focus:outline-none focus:shadow-outline\">\r\n                    Register\r\n                 </button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n    )\r\n}\r\n",{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":3,"column":65,"nodeType":"45","messageId":"46","endLine":3,"endColumn":75},{"ruleId":"43","severity":1,"message":"47","line":22,"column":15,"nodeType":"45","messageId":"46","endLine":22,"endColumn":16},{"ruleId":"48","severity":1,"message":"49","line":33,"column":101,"nodeType":"50","messageId":"51","endLine":33,"endColumn":102,"suggestions":"52"},{"ruleId":"48","severity":1,"message":"49","line":33,"column":126,"nodeType":"50","messageId":"51","endLine":33,"endColumn":127,"suggestions":"53"},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'FiXOctagon' is defined but never used.","Identifier","unusedVar","'x' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["56","57"],["58","59"],"no-global-assign","no-unsafe-negation",{"messageId":"60","fix":"61","desc":"62"},{"messageId":"63","fix":"64","desc":"65"},{"messageId":"60","fix":"66","desc":"62"},{"messageId":"63","fix":"67","desc":"65"},"removeEscape",{"range":"68","text":"69"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"70","text":"71"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"72","text":"69"},{"range":"73","text":"71"},[1631,1632],"",[1631,1631],"\\",[1656,1657],[1656,1656]]